{"componentChunkName":"component---node-modules-gatsby-theme-mdx-deck-src-templates-deck-js","path":"/slides/print","result":{"data":{"deck":{"id":"807f1df7-7ed7-5df8-aa16-801bd519b6ed","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n/* @jsx mdx */\nvar theme = _objectSpread({}, myTheme);\n\nvar _frontmatter = {};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar Primary = makeShortcode(\"Primary\");\nvar Secondary = makeShortcode(\"Secondary\");\nvar Notes = makeShortcode(\"Notes\");\nvar SplitTitle = makeShortcode(\"SplitTitle\");\nvar Image = makeShortcode(\"Image\");\nvar ThatGuy = makeShortcode(\"ThatGuy\");\nvar Steps = makeShortcode(\"Steps\");\nvar Code = makeShortcode(\"Code\");\nvar LiveCode = makeShortcode(\"LiveCode\");\nvar Demo = makeShortcode(\"Demo\");\nvar Figure = makeShortcode(\"Figure\");\nvar layoutProps = {\n  theme: theme,\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(Primary, {\n    mdxType: \"Primary\"\n  }, mdx(\"h1\", null, \"Deck Name\"), mdx(\"p\", null, \"by Andrey Okonetchnikov\")), mdx(\"hr\", null), mdx(Primary, {\n    imgSrc: \"//source.unsplash.com/-K6JMRMj4x4/2560x1920\",\n    sx: {\n      backgroundBlendMode: \"multiply\"\n    },\n    mdxType: \"Primary\"\n  }, mdx(\"h1\", null, \"Primary slide\")), mdx(\"hr\", null), mdx(Secondary, {\n    imgSrc: \"./assets/colorsnapper.png\",\n    mdxType: \"Secondary\"\n  }, mdx(\"h2\", null, \"Secondary slide\")), mdx(Notes, {\n    mdxType: \"Notes\"\n  }, \"Secondary slide\"), mdx(\"hr\", null), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"Takeaway slide\")), mdx(Notes, {\n    mdxType: \"Notes\"\n  }, \"Takeaway slide\"), mdx(\"hr\", null), mdx(\"h1\", null, \"H1\"), mdx(\"h2\", null, \"H2\"), mdx(\"h3\", null, \"H3\"), mdx(\"p\", null, \"This is paragraph with \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"inline\"), \" code\"), mdx(\"hr\", null), mdx(SplitTitle, {\n    mdxType: \"SplitTitle\"\n  }, mdx(\"h1\", null, \"Ordered List\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"List\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"List\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"List\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"List\"))), mdx(\"hr\", null), mdx(Image, {\n    src: \"/assets/colorsnapper.png\",\n    size: \"contain\",\n    mdxType: \"Image\"\n  }), mdx(\"hr\", null), mdx(SplitTitle, {\n    mdxType: \"SplitTitle\"\n  }, mdx(\"h1\", null, \"Code Sample\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\"\n  }), \"function Code({ children, language, inline = false }) {\\n  if (typeof children !== \\\"string\\\") {\\n    return (\\n      <pre style={{ color: \\\"firebrick\\\" }}>\\n        Code: `children` must be a string\\n      </pre>\\n    );\\n  }\\n  return (\\n    <Prism {...codeTheme} useInlineStyles language={language}>\\n      {children.replace(/\\\\t/, \\\"  \\\")}\\n    </Prism>\\n  );\\n}\\n\"))), mdx(ThatGuy, {\n    mdxType: \"ThatGuy\"\n  }), mdx(\"hr\", null), mdx(SplitTitle, {\n    mdxType: \"SplitTitle\"\n  }, mdx(\"h1\", null, \"List with steps\"), mdx(Steps, {\n    mdxType: \"Steps\"\n  }, mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"One\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Two\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Three\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Four\")))), mdx(\"hr\", null), mdx(Code, {\n    language: \"jsx\",\n    mdxType: \"Code\"\n  }, \"<h1>Example</h1>\"), mdx(\"hr\", null), mdx(LiveCode, {\n    code: \"<h1>Example</h1>\",\n    mdxType: \"LiveCode\"\n  }), mdx(\"hr\", null), mdx(Demo, {\n    src: \"https://component-driven.io\",\n    mdxType: \"Demo\"\n  }), mdx(\"hr\", null), mdx(Figure, {\n    src: \"/assets/component-driven.svg\",\n    alt: \"Component-driven Logo\",\n    caption: mdx(\"a\", {\n      href: \"https://component-driven.io\"\n    }, \"https://component-driven.io\"),\n    mdxType: \"Figure\"\n  }));\n}\n;\nMDXContent.isMDXComponent = true;","title":"Deck Name"}},"pageContext":{"id":"807f1df7-7ed7-5df8-aa16-801bd519b6ed","slug":"/slides","title":"Deck Name"}}}